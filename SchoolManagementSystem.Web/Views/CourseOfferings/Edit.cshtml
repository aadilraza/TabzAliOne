@using SchoolManagementSystem.Web.Core.Extensions
@model SchoolManagementSystem.Web.Models.CourseOffering.CourseOfferingDetailsViewModel

@{
    ViewBag.Title = "Edit";
    ViewBag.SubTitle = "Course Offering";
}
@section Menu {
    @Scripts.Render("~/Scripts/Forms/Advanced/menu")
}

@Styles.Render("~/AdminLTE/plugins/daterangepicker/css")
@Styles.Render("~/AdminLTE/plugins/icheck/css")
@Styles.Render("~/AdminLTE/plugins/colorpicker/css")
@Styles.Render("~/AdminLTE/plugins/timepicker/css")
@Styles.Render("~/AdminLTE/plugins/select2/css")
@Styles.Render("~/AdminLTE/dist/css")
@Styles.Render("~/AdminLTE/dist/css/skins")

<div class="row">
    <div class="col-md-6">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Edit Course Offering</h3>
            </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="box-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Courses)
                        <select class="form-control select2" style="width: 100%;" name="CourseId">
                            @foreach (var item in Model.Courses)
                            {
                                if (item.Value == Model.CourseId.ToString())
                                {
                                    <option value="@item.Value" selected>@item.Text</option>
                                }
                                else
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Instructors)
                        <select class="form-control select2" style="width: 100%;" name="InstructorId">
                            @foreach (var item in Model.Instructors)
                            {
                                if (item.Value == Model.InstructorId.ToString())
                                {
                                    <option value="@item.Value" selected>@item.Text</option>
                                }
                                else
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HourlyRate)
                        @Html.EditorFor(model => model.HourlyRate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HourlyRate, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Rooms)
                        <select class="form-control select2" style="width: 100%;" name="RoomId">
                            @foreach (var item in Model.Rooms)
                            {
                                if (item.Value == Model.RoomId.ToString())
                                {
                                    <option value="@item.Value" selected>@item.Text</option>
                                }
                                else
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate)
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StartTime)
                        @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EndTime)
                        @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Days)<br />
                        @Html.CheckBoxListForEnum(model => model.Days, Model.Days.ToSelectList())
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.State)<br />
                        @Html.EnumDropDownListFor(model => model.State)
                    </div>
                </div>
                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Submit</button>
                </div>
            }
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/AdminLTE/plugins/select2/js")
    @Scripts.Render("~/AdminLTE/plugins/input-mask/js")
    @Scripts.Render("~/AdminLTE/plugins/momentjs/js")
    @Scripts.Render("~/AdminLTE/plugins/daterangepicker/js")
    @Scripts.Render("~/AdminLTE/plugins/colorpicker/js")
    @Scripts.Render("~/AdminLTE/plugins/timepicker/js")
    @Scripts.Render("~/AdminLTE/plugins/icheck/js")
    @Scripts.Render("~/Scripts/Forms/Advanced")
    @Scripts.Render("~/bundles/jqueryval")
}
